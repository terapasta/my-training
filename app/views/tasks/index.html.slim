= javascript_pack_tag 'task_index'
- content_for(:html_title) { t('tasks.index.title') }
#task-index.columns.is-centered
  .column.is-10-desktop
    h1.is-size-3 = t('tasks.index.title')
    hr
    - if @notice_tasks.present?
      - @notice_tasks.each do |notice_task|
        - if is_danger?(notice_task.deadline)
          <notification-area task-id="#{notice_task.id}" type="danger">#{t('messages.notification.danger', task_name: notice_task.name)}</notification-area>
        - elsif is_warning?(notice_task.deadline)
          <notification-area task-id="#{notice_task.id}" type="warning">#{t('messages.notification.warning', task_name: notice_task.name)}</notification-area>
        - else
          <notification-area task-id="#{notice_task.id}" type="info">#{t('messages.notification.info', task_name: notice_task.name, days: get_diff_from_today(notice_task.deadline))}</notification-area>
    div
      nav.level
        .level-left
        .level-right
          .level-item
            = render 'tasks/shared/links/new'
      .card-background
        table.table.is-striped.is-fullwidth
          thead.thead
            tr
              th = t('activerecord.attributes.task.id')
              th = t('activerecord.attributes.task.name')
              th = link_to_sort_tasks(t('activerecord.attributes.task.deadline'), 'deadline')
              th = t('activerecord.attributes.task.status')
              th = link_to_sort_tasks(t('activerecord.attributes.task.priority'), 'priority')
              th = t('activerecord.attributes.label.name')
              th
          tbody.tbody
            - @tasks.each do |task|
              tr class="#{'has-background-danger' if is_danger?(task.deadline)} #{'has-background-warning' if is_warning?(task.deadline)} #{'has-background-info' if is_info?(task.deadline)}"
                td = task.id
                td = task.name
                td = format_short_date_with_wday(task.deadline)
                td
                  <status-selector task-id="#{task.id}" task-status="#{task.status}"></status-selector>
                td
                  <priority-selector task-id="#{task.id}" task-priority="#{task.priority}"></priority-selector>
                td
                  - if task.labels.present?
                    - task.labels.each do |label|
                      span.tags-input-badge.tags-input-badge-pill.tags-input-badge-selected-default.is-info = label.name
                  - else
                    span -
                td 
                  = render partial: 'tasks/shared/links/show', locals: { id: task.id }
                  = render partial: 'tasks/shared/links/edit', locals: { id: task.id }
                  = render partial: 'tasks/shared/links/destroy', locals: { id: task.id }
        div data-turbolinks="false"
          = paginate @tasks
  .column.is-2-desktop
    .card-background
      .form
        = form_with model: @search_form, scope: :q, url: tasks_path, method: :get, local: true do |f|
          = render partial: 'shared/forms/text_field', locals: { form: f, attr: 'name', label: t('activerecord.attributes.task.name') }
          = render partial: 'shared/forms/select', locals: { form: f, attr: 'status', list: array_with_blank(t('forms.select.unselected'), Task.statuses.keys.map {|k| [t("enums.task.status.#{k}"), k]}), label: t('activerecord.attributes.task.status') }
          = render partial: 'shared/forms/select', locals: { form: f, attr: 'priority', list: array_with_blank(t('forms.select.unselected'), Task.priorities.keys.map {|k| [t("enums.task.priority.#{k}"), k]}), label: t('activerecord.attributes.task.priority') }
          = render partial: 'shared/forms/collection_check_boxes', locals: { form: f, ids: 'label_ids', list: current_user.tasks.map{|task| task.labels}.flatten, label: t('activerecord.attributes.task.label') }
          = render partial: 'shared/forms/submit', locals: { form: f, name: t('buttons.search') }
